package hethongvienthong;

import java.io.FileInputStream;
import java.util.Scanner;

import utils.MyPath;

public class Solution {

	static int[] dx = { 0, -1, 0, 1 };
	static int[] dy = { -1, 0, 1, 0 };

	public static void main(String[] args) {
		try {
			System.setIn(new FileInputStream(MyPath.getAbsoltePath("hethongvienthong")));
			Scanner sc = new Scanner(System.in);
			int T = sc.nextInt();
			for (int tc = 1; tc <= T; tc++) {
				int row = sc.nextInt();
				int col = sc.nextInt();
				char[][] arr = new char[row][col];
				int count = 0;
				
				// input
				for (int i = 0; i < row; i++) {
					String str = sc.next();
					for (int j = 0; j < str.length(); j++) {
						arr[i][j] = str.charAt(j);
					}
				}
				MyPath.showMatrix(arr, row, col);
				
				// solve
				for (int i = 0; i < row; i++) {
					for (int j = 0; j < col; j++) {
						if (arr[i][j] == 'A') {
							for (int k = 1; k <= 1; k++) {
								cover(arr, row, col, i, j, k);
							}
						} else if (arr[i][j] == 'B') {
							for (int k = 1; k <= 2; k++) {
								cover(arr, row, col, i, j, k);
							}
						} else if (arr[i][j] == 'C') {
							for (int k = 1; k <= 3; k++) {
								cover(arr, row, col, i, j, k);
							}
						}
					}
				}
				MyPath.showMatrix(arr, row, col);

				for (int i = 0; i < row; i++) {
					for (int j = 0; j < col; j++) {
						if (arr[i][j] == 'H') {
							count++;
						}
					}
				}
				
				System.out.println("#" + tc + " " + count);
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	static void cover(char[][] arr, int row, int col, int i, int j, int k) {
		if (j + dy[0] * k >= 0) {
			arr[i + dx[0] * k][j + dy[0] * k] = ' ';
		} 
		if (j + dy[2] * k <= col - 1) {
			arr[i + dx[2] * k][j + dy[2] * k] = ' ';
		}
		if (i + dx[1] * k >= 0) {
			arr[i + dx[1] * k][j + dy[1] * k] = ' ';
		}
		if (i + dx[3] * k <= row - 1) {
			arr[i + dx[3] * k][j + dy[3] * k] = ' ';
		}
	}
}
